<raptor-taglib>
    
    
    <tlib-version>1.0</tlib-version>
    
    <uri>http://raptorjs.org/templates/core</uri>
    <short-name>core</short-name>
    <prefix>c</prefix>
    
    <tag id="template">
        
        <name>template</name> 
        
        <attribute>
            <name>name</name>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <name>params</name>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <name>imports</name>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <uri>*</uri>
            <name>functions</name>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <attribute>
            <uri>*</uri>
            <name>import-functions</name>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <attribute>
            <uri>*</uri>
            <name>import-helper-object</name>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <node-class>raptor/templating/taglibs/core/TemplateNode</node-class>
    </tag>
    
    <tag extends="template">
    
        <uri></uri>
        <name>template</name>
        
    </tag>
    
    <tag>
        
        <name>*</name> 
        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->
        
        <attribute uri="core">
            <name>space</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute uri="core">
            <name>whitespace</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute uri="core">
            <name>for</name>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <attribute uri="core">
            <name>for-each</name>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <attribute uri="core">
            <name>if</name>
            <type>expression</type>
        </attribute>
        
        <attribute uri="core">
            <name>else</name>
            <type>empty</type>
        </attribute>
        
        <attribute uri="core">
            <name>else-if</name>
            <type>expression</type>
        </attribute>
        
        <attribute uri="core">
            <name>attrs</name>
            <type>expression</type>
        </attribute>
        
        <attribute uri="core">
            <name>when</name>
            <type>expression</type>
        </attribute>
        
        <attribute uri="core">
            <name>with</name>
            <type>custom</type>
        </attribute>
        
        <attribute uri="core">
            <name>otherwise</name>
            <type>empty</type>
        </attribute>
        
        <attribute uri="core">
            <name>parse-body-text</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <attribute uri="core">
            <name>trim-body-indent</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute uri="core">
            <name>strip</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute uri="core">
            <name>bodyContent</name>
            <type>expression</type>
            <deprecated>Use "content" attribute instead. This will be removed in the future.</deprecated>
        </attribute>
        
        <attribute uri="core">
            <name>content</name>
            <type>expression</type>
        </attribute>
        
        <attribute uri="core">
            <name>replace</name>
            <type>expression</type>
        </attribute>

        <attribute uri="core">
            <name>input</name>
            <type>expression</type>
        </attribute>
        
        <!-- Compiler that applies to all tags as well -->
        <transformer>
            <class-name>raptor/templating/taglibs/core/CoreTagTransformer</class-name>
        </transformer>
    </tag>
    
    
    
    <tag>
        
        <name>for</name> 

        <node-class>raptor/templating/taglibs/core/ForNode</node-class>
        
        <attribute>
            <name>each</name>
            <required>false</required>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <name>separator</name>
            <type>string</type>
        </attribute>
        
        <attribute>
            <name>status-var</name>
            <type>identifier</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <name>varStatus</name>
            <type>identifier</type>
            <allow-expressions>false</allow-expressions>
            <deprecated>Use status-var instead. This will be removed in the future.</deprecated>
        </attribute>
        
        <attribute>
            <name>for-loop</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
    </tag>
    
    <tag>
        
        <name>write</name> 

        <node-class>raptor/templating/taglibs/core/WriteNode</node-class>
        
        <attribute>
            <name>value</name>
            <required>true</required>
            <type>expression</type>
        </attribute>
        
        <attribute>
            <name>escapeXml</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
            <deprecated>Use escape-xml instead. This will be removed in the future.</deprecated>
        </attribute>
        
        <attribute>
            <name>escape-xml</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
    </tag>
    
    <tag>
        
        <name>if</name> 

        <node-class>raptor/templating/taglibs/core/IfNode</node-class>

        <attribute>
            <name>test</name>
            <type>expression</type>
        </attribute>

    </tag>
    
    <tag>
        <name>else</name> 
        <node-class>raptor/templating/taglibs/core/ElseNode</node-class>
        
        <transformer>
            <class-name>raptor/templating/taglibs/core/ElseTagTransformer</class-name>
            <after>raptor/templating/taglibs/core/CoreTagTransformer</after>
            <properties>
                <type>else</type>
            </properties>
        </transformer>
    </tag>
    
    <tag>
        <name>else-if</name>
        <attribute name="test" type="expression"/>
         
        <node-class>raptor/templating/taglibs/core/ElseIfNode</node-class>
        
        <transformer>
            <class-name>raptor/templating/taglibs/core/ElseTagTransformer</class-name>
            <after>raptor/templating/taglibs/core/CoreTagTransformer</after>
            <properties>
                <type>else-if</type>
            </properties>
        </transformer>
    </tag>
    
    <tag>
        
        <name>invoke</name> 

        <node-class>raptor/templating/taglibs/core/InvokeNode</node-class>

        <attribute>
            <name>function</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
            <required>true</required>
        </attribute>

        <attribute>
            <name>*</name>
            <uri></uri>
            <type>string</type>
            <allow-expressions>true</allow-expressions>
        </attribute>
    </tag>
    
    <tag>
        
        <name>choose</name> 

        <node-class>raptor/templating/taglibs/core/ChooseNode</node-class>

    </tag>

    <tag>
        
        <name>when</name> 

        <node-class>raptor/templating/taglibs/core/WhenNode</node-class>

        <attribute>
            <name>test</name>
            <type>expression</type>
        </attribute>
        
    </tag>
    
    <tag>
        
        <name>otherwise</name> 

        <node-class>raptor/templating/taglibs/core/OtherwiseNode</node-class>

    </tag>
        
    <tag>
        
        <name>def</name> 

        <node-class>raptor/templating/taglibs/core/DefNode</node-class>

        <attribute>
            <name>function</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>

        <attribute>
            <name>body-param</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
    </tag>
    
    <tag>
        
        <name>with</name> 

        <node-class>raptor/templating/taglibs/core/WithNode</node-class>

        <attribute>
            <name>vars</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
    </tag>
    
    <tag>
        
        <name>include</name> 

        <node-class>raptor/templating/taglibs/core/IncludeNode</node-class>

        <attribute>
            <name>template</name>
            <type>string</type>
        </attribute>
        
        <attribute>
            <name>templateData</name>
            <type>expression</type>
            <deprecated>Use template-data instead. This will be removed in the future.</deprecated>
        </attribute>
        
        <attribute>
            <name>template-data</name>
            <type>expression</type>
        </attribute>
        
        <attribute>
            <name>resource</name>
            <type>string</type>
        </attribute>
        
        <attribute>
            <name>static</name>
            <type>boolean</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <dynamic-attributes>true</dynamic-attributes>
        
    </tag>
    
    <tag>
        
        <name>attr</name> 

        <attribute>
            <name>name</name>
            <type>string</type>
        </attribute>
        
        <attribute>
            <name>value</name>
            <type>string</type>
        </attribute>
        
        <attribute>
            <name>uri</name>
            <type>string</type>
        </attribute>

        <attribute>
            <name>prefix</name>
            <type>string</type>
        </attribute>
    </tag>
    
    <tag>
        
        <name>var</name> 

        <node-class>raptor/templating/taglibs/core/VarNode</node-class>

        <attribute>
            <name>name</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <name>value</name>
            <type>expression</type>
        </attribute>

        <attribute>
            <name>string-value</name>
            <type>string</type>
        </attribute>

        <attribute>
            <name>boolean-value</name>
            <type>boolean</type>
        </attribute>

        <attribute>
            <name>number-value</name>
            <type>number</type>
        </attribute>
    </tag>
    
    <tag>
        
        <name>assign</name> 

        <node-class>raptor/templating/taglibs/core/AssignNode</node-class>

        <attribute>
            <name>var</name>
            <type>custom</type>
            <allow-expressions>false</allow-expressions>
        </attribute>
        
        <attribute>
            <name>value</name>
            <type>expression</type>
        </attribute>
    </tag>
    
    <text-transformer>
        <class-name>raptor/templating/taglibs/core/CoreTextTransformer</class-name>
    </text-transformer>
    
</raptor-taglib>